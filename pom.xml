<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.example</groupId>
    <artifactId>gk-rpc</artifactId>
    <packaging>pom</packaging>
    <version>1.0-SNAPSHOT</version>
    <modules>
        <module>gk-rpc-common</module>
        <module>gk-rpc-proto</module>
        <module>gk-rpc-codec</module>
        <module>gk-rpc-server</module>
        <module>gk-rpc-client</module>
        <module>gk-rpc-transport</module>
        <module>gk-rpc-example</module>
    </modules>

    <properties>
        <java.version>1.8</java.version>
        <commons.version>2.5</commons.version>
        <jetty.version>9.4.19.v20190610</jetty.version>
        <fastjson.version>1.2.76</fastjson.version>
        <lombok.version>1.18.22</lombok.version>
        <slf4j.version>1.7.26</slf4j.version>
        <logback.version>1.2.3</logback.version>
        <junit.version>4.12</junit.version>
    </properties>

    <!--依赖分为两部分，一部分是所有模块都依赖的，另一部分是对子模块依赖的声明-->

    <!--所有模块都依赖的-->
    <dependencies>
        <!--单元测试依赖-->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
        </dependency>
        <!--每个模块都需要的日志-->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <!--日志的实现-->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
        </dependency>
    </dependencies>

    <!--子模块可能需要依赖的-->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <!--commons-io用来读取数据，在RpcServer的handler中使用-->
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons.version}</version>
            </dependency>
            <!--网络通信，用来传输二进制数据，我们选择走http，在server端会用到jetty
                通常情况下我们会使用TCP长连接来做RPC的传输，但是为了简单我们就使用了HTTP
                实际上使用HTTP也有应用场景：当我们有Http服务时还想在多增加RPC服务，就可以使用这种方式，可以避免新增端口，
                提高安全性
            -->
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-servlet</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <!--序列化（Java对象与二进制互相转换）会用到的-->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!--做工程需要声明编译的版本-->
    <build>
        <!--需要配在plugin里面-->
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.3</version>
                <!--配置需要的jdk版本-->
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>